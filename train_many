#!/bin/bash
# Usage ./train_many.sh <num_links> <num_runs>

if [ "$#" -ne 4 ]; then
    echo "Usage: $0 <num_links> <num_runs> <high_energy=0/1>"
    exit 1
fi

N_LINKS="$1"
N_RUNS="$2"
HIGH_ENERGY="$3"
TRAINING_DT="${4}"
EXP_ID="stable"
DIRECTORY="experiments/error_${EXP_ID}"
INNER="PSD-REHU"
DT="1"
SAVE="1"


mkdir -p "$DIRECTORY"
# Clear tmp directory
rm -rf experiments/tmp


./train_pendulum_simple "$N_LINKS" "1" "$HIGH_ENERGY" "$TRAINING_DT" &


N_JOBS=1
for ALPHA in 0.001 #0.0001
do
    for INNER_EPSILON in 0.01 #0.005 0.001
    do
        for SMOOTH_V in 0
        do
            for REHU in 0.005 #0.001 0.0005
            do

                mkdir experiments/tmp

                NUM_RAN=0
                while [ $NUM_RAN -lt $N_RUNS ]
                do

                    # Run N_JOBS jobs in parallel
                    JOBS_STARTED=0
                    while [ $JOBS_STARTED -lt $N_JOBS ] && [ $NUM_RAN -lt $N_RUNS ]
                    do
                        ./train_pendulum_stable "$EXP_ID" "$N_LINKS" "$ALPHA" "$INNER" "$INNER_EPSILON" "$SMOOTH_V" "$REHU" "$DT" "$SAVE" "$TRAINING_DT" "$HIGH_ENERGY" &
                        NUM_RAN=$((NUM_RAN+1))
                        JOBS_STARTED=$((JOBS_STARTED+1))
                    done
                    echo waiting after $NUM_RAN
                    wait

                done
                echo ended running jobs in parallel for $ALPHA $INNER_EPSILON $SMOOTH_V $REHU
                wait


                python3 generatePlots.py "experiments/error_${EXP_ID}/${N_LINKS}/${ALPHA}_${INNER}_${INNER_EPSILON}_${SMOOTH_V}_${REHU}" "$HIGH_ENERGY" "$TRAINING_DT"

            done
        wait
        done
    done
done

